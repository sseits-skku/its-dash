# Generated by Django 2.2.4 on 2019-08-22 11:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.placeholder_models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('content', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', utils.placeholder_models.SharedCharField(max_length=255, unique=True, verbose_name='Category name')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('content_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Content UUID Field')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Content created date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Content modified date')),
                ('text', models.TextField(blank=True, verbose_name='Content')),
                ('content_type', models.CharField(default='Markdown', max_length=255, verbose_name='Content type')),
                ('ip_addr', models.GenericIPAddressField(verbose_name='Wrote IP Address')),
                ('deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('is_subcomment', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcomment', to='board.Comment')),
            ],
            options={
                'verbose_name': 'comment',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='PostStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', utils.placeholder_models.SharedCharField(max_length=255, unique=True, verbose_name='Post status')),
                ('detail', utils.placeholder_models.SharedCharField(max_length=255, verbose_name='Post detail')),
            ],
            options={
                'verbose_name': 'post status',
                'verbose_name_plural': 'post statuses',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', utils.placeholder_models.SharedCharField(max_length=255, unique=True, verbose_name='Tag name')),
            ],
            options={
                'verbose_name': 'tag',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('content_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Content UUID Field')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Content created date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Content modified date')),
                ('text', models.TextField(blank=True, verbose_name='Content')),
                ('content_type', models.CharField(default='Markdown', max_length=255, verbose_name='Content type')),
                ('title', utils.placeholder_models.SharedCharField(max_length=255, verbose_name='Post title')),
                ('ip_addr', models.GenericIPAddressField(verbose_name='Wrote IP Address')),
                ('deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='board.Category', verbose_name='Post category')),
                ('comment', models.ManyToManyField(related_name='comment', to='board.Comment', verbose_name='Post comments')),
                ('files', models.ManyToManyField(related_name='post_files', to='content.FileContent', verbose_name='Post files')),
                ('images', models.ManyToManyField(related_name='post_images', to='content.ImageContent', verbose_name='Post images')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='board.PostStatus', verbose_name='Post status')),
                ('tags', models.ManyToManyField(related_name='tag', to='board.Tag', verbose_name='Post Tags')),
            ],
            options={
                'verbose_name': 'post',
                'ordering': ('-created_date',),
            },
        ),
    ]
